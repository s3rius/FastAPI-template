version: '3.7'

services:
  api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
    image: {{cookiecutter.project_name}}:{{"${" }}{{cookiecutter.project_name | upper }}_VERSION:-latest{{"}"}}
    restart: always
    env_file:
      - .env
    {%- if ((cookiecutter.db_info.name != "none" and cookiecutter.db_info.name != "sqlite") or
            (cookiecutter.enable_redis == "True")) %}
    depends_on:
      {%- if cookiecutter.db_info.name != "none" %}
      {%- if cookiecutter.db_info.name != "sqlite" %}
      db:
        condition: service_healthy
      {%- endif %}
      {%- endif %}
      {%- if cookiecutter.enable_redis == "True" %}
      redis:
        condition: service_healthy
      {%- endif %}
    {%- endif %}
    environment:
      {{cookiecutter.project_name | upper }}_HOST: 0.0.0.0
      {%- if cookiecutter.db_info.name != "none" %}
      {%- if cookiecutter.db_info.name == "sqlite" %}
      {{cookiecutter.project_name | upper }}_DB_FILE: /db_data/db.sqlite3
      {%- else %}
      {{cookiecutter.project_name | upper}}_DB_HOST: {{cookiecutter.project_name}}-db
      {{cookiecutter.project_name | upper}}_DB_PORT: {{cookiecutter.db_info.port}}
      {{cookiecutter.project_name | upper}}_DB_USER: {{cookiecutter.project_name}}
      {{cookiecutter.project_name | upper}}_DB_PASS: {{cookiecutter.project_name}}
      {{cookiecutter.project_name | upper}}_DB_BASE: {{cookiecutter.project_name}}
      {%- endif %}
      {%- endif %}

    {%- if cookiecutter.db_info.name == "sqlite" %}
    volumes:
      - {{cookiecutter.project_name}}-db-data:/db_data/
    {%- endif %}

  {%- if cookiecutter.db_info.name == "postgresql" %}
  db:
    image: {{cookiecutter.db_info.image}}
    hostname: {{cookiecutter.project_name}}-db
    environment:
      - "POSTGRES_PASSWORD={{cookiecutter.project_name}}"
      - "POSTGRES_USER={{cookiecutter.project_name}}"
      - "POSTGRES_DB={{cookiecutter.project_name}}"
    volumes:
      - {{cookiecutter.project_name}}-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U {{cookiecutter.project_name}}
      interval: 2s
      timeout: 3s
      retries: 40
  {%- endif %}

  {% if cookiecutter.db_info.name == "mysql" -%}
  db:
    image: {{cookiecutter.db_info.image}}
    hostname: {{cookiecutter.project_name}}-db
    restart: always
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
      - "MYSQL_ROOT_PASSWORD={{cookiecutter.project_name}}"
      - "MYSQL_ROOT_USER={{cookiecutter.project_name}}"
      - "MYSQL_DATABASE={{cookiecutter.project_name}}"
    healthcheck:
      test:
        - "CMD"
        - "mysql"
        - "-u"
        - "{{cookiecutter.project_name}}"
        - "-p{{cookiecutter.project_name}}"
        - "-e"
        - "SELECT 1"
      interval: 3s
      timeout: 3s
      retries: 40
    volumes:
      - {{cookiecutter.project_name}}-db-data:/bitnami/mysql/data
  {%- endif %}

  {% if cookiecutter.enable_migrations == 'True' -%}
  migrator:
    image: {{cookiecutter.project_name}}:{{"${" }}{{cookiecutter.project_name | upper }}_VERSION:-latest{{"}"}}
    {%- if cookiecutter.orm == 'sqlalchemy' %}
    command: alembic upgrade head
    {%- elif cookiecutter.orm == 'tortoise' %}
    command: aerich upgrade
    {%- endif %}
    {%- if cookiecutter.db_info.name == "sqlite" %}
    environment:
      {{cookiecutter.project_name | upper }}_DB_FILE: /db_data/db.sqlite3
    volumes:
      - {{cookiecutter.project_name}}-db-data:/db_data/
    {%- else %}
    environment:
      {{cookiecutter.project_name | upper}}_DB_HOST: {{cookiecutter.project_name}}-db
      {{cookiecutter.project_name | upper}}_DB_PORT: {{cookiecutter.db_info.port}}
      {{cookiecutter.project_name | upper}}_DB_USER: {{cookiecutter.project_name}}
      {{cookiecutter.project_name | upper}}_DB_PASS: {{cookiecutter.project_name}}
      {{cookiecutter.project_name | upper}}_DB_BASE: {{cookiecutter.project_name}}
    {%- endif %}
    {%- if cookiecutter.db_info.name != "sqlite" %}
    depends_on:
      db:
        condition: service_healthy
    {%- endif %}
  {%- endif %}

  {% if cookiecutter.enable_redis == "True" -%}
  redis:
    image: bitnami/redis:6.2.5
    hostname: {{cookiecutter.project_name}}-redis
    restart: always
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30
  {%- endif %}

{% if cookiecutter.db_info.name != 'none' %}
volumes:
  {{cookiecutter.project_name}}-db-data:
    name: {{cookiecutter.project_name}}-db-data
{% endif %}
