---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{cookiecutter.kube_name}}
  name: {{cookiecutter.kube_name}}-db
spec:
  selector:
    matchLabels:
      app: {{cookiecutter.kube_name}}-db
  template:
    metadata:
      labels:
        app: {{cookiecutter.kube_name}}-db
    spec:
      containers:
        - name: database
          image: {{cookiecutter.db_info.image}}
          resources:
            limits:
              memory: "300Mi"
              cpu: "200m"
          env:
            {%- if cookiecutter.db_info.name == 'postgresql' %}
            - name: POSTGRES_PASSWORD
              value: "{{cookiecutter.project_name}}"
            - name: POSTGRES_USER
              value: "{{cookiecutter.project_name}}"
            - name: POSTGRES_DB
              value: "{{cookiecutter.project_name}}"
            {%- elif cookiecutter.db_info.name == 'mysql' %}
            - name: MYSQL_PASSWORD
              value: "{{cookiecutter.project_name}}"
            - name: MYSQL_USER
              value: "{{cookiecutter.project_name}}"
            - name: MYSQL_DATABASE
              value: "{{cookiecutter.project_name}}"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            {%- endif %}
          ports:
            - containerPort: {{cookiecutter.db_info.port}}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{cookiecutter.kube_name}}
  name: "{{cookiecutter.kube_name}}-db-service"
spec:
  selector:
    app: {{cookiecutter.kube_name}}-db
  ports:
    - port: {{cookiecutter.db_info.port}}
      targetPort: {{cookiecutter.db_info.port}}
---
{%- if cookiecutter.enable_migrations == "True" %}
apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{cookiecutter.kube_name}}
  name: {{cookiecutter.kube_name}}-migrator
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      containers:
      - name: migrator
        image: {{cookiecutter.project_name}}:latest
        command:
          {%- if cookiecutter.orm in ['sqlalchemy', 'ormar'] %}
          - "alembic"
          - "upgrade"
          - "head"
          {%- elif cookiecutter.orm == 'tortoise' %}
          - "aerich"
          - "upgrade"
          {%- elif cookiecutter.orm == 'piccolo' %}
          - "piccolo"
          - "migrations"
          - "forwards"
          - "all"
          {%- endif %}
        resources:
          limits:
            memory: "200Mi"
            cpu: "250m"
        env:
          - name: "{{cookiecutter.project_name | upper }}_DB_HOST"
            value: "{{cookiecutter.kube_name}}-db-service"
          {%- if cookiecutter.orm == 'piccolo' %}
          - name: "PICCOLO_CONF"
            value: "{{cookiecutter.project_name}}.piccolo_conf"
          {%- endif %}
      initContainers:
        - name: wait-for-db
          image: toschneck/wait-for-it:latest
          command: ["./wait-for-it.sh", "-t", "60", "{{cookiecutter.kube_name}}-db-service:{{cookiecutter.db_info.port}}"]
      restartPolicy: Never

---
{%- endif %}
