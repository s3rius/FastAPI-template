stages:
  - "test"

.test-template:
  stage: test
  image: python:3.9.6-slim-buster
  tags:
    - kubernetes-runner
    - docker-runner
  except:
    - tags
  before_script:
    - pip install poetry==1.1.7
    - poetry config virtualenvs.create false
    - poetry install

black:
  extends:
    - .test-template
  script:
    - black --check .

flake8:
  extends:
    - .test-template
  script:
    - flake8 --count .

mypy:
  extends:
    - .test-template
  script:
    - mypy .

pytest:
  extends:
    - .test-template
  {%- if cookiecutter.db_info.name != "none" %}
  {%- if cookiecutter.db_info.name != "sqlite" %}
  services:
    - name: {{ cookiecutter.db_info.image }}
  variables:
    {%- if cookiecutter.db_info.name == "postgresql" %}
    {{ cookiecutter.project_name | upper }}_DB_HOST: localhost
    POSTGRES_PASSWORD: {{ cookiecutter.project_name }}
    POSTGRES_USER: {{ cookiecutter.project_name }}
    POSTGRES_DB: {{ cookiecutter.project_name }}
    {%- endif %}
    {%- if cookiecutter.db_info.name == "mysql" %}
    {{ cookiecutter.project_name | upper }}_DB_HOST: localhost
    MYSQL_PASSWORD: {{ cookiecutter.project_name }}
    MYSQL_USER: {{ cookiecutter.project_name }}
    MYSQL_DATABASE: {{ cookiecutter.project_name }}
    ALLOW_EMPTY_PASSWORD: yes
    {%- endif %}
  {%- endif %}
  {%- endif %}
  script:
    {%- if cookiecutter.db_info.name != "none" %}
    {%- if cookiecutter.db_info.name != "sqlite" %}
    - apt update
    - apt install -y wait-for-it
    - wait-for-it -t 180 ${{ cookiecutter.project_name | upper }}_DB_HOST:{{cookiecutter.db_info.port}}
    {%- endif %}
    {%- endif %}
    - pytest -vv --cov="{{cookiecutter.project_name}}" .
