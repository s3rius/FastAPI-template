name: Testing {{cookiecutter.project_name}}

on: push

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run black check
        run: poetry run black --check .
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run flake8 check
        run: poetry run flake8 --count .
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run mypy check
        run: poetry run mypy .
  pytest:
    runs-on: ubuntu-latest
    {%- if cookiecutter.db_info.name != "none" %}
    {%- if cookiecutter.db_info.name != "sqlite" %}
    services:
      {{cookiecutter.project_name}}-db:
        image: {{ cookiecutter.db_info.image }}
        env:
          {%- if cookiecutter.db_info.name == "postgresql" %}
          POSTGRES_PASSWORD: {{ cookiecutter.project_name }}
          POSTGRES_USER: {{ cookiecutter.project_name }}
          POSTGRES_DB: {{ cookiecutter.project_name }}
          {%- endif %}
          {%- if cookiecutter.db_info.name == "mysql" %}
          MYSQL_PASSWORD: {{ cookiecutter.project_name }}
          MYSQL_USER: {{ cookiecutter.project_name }}
          MYSQL_DATABASE: {{ cookiecutter.project_name }}
          ALLOW_EMPTY_PASSWORD: yes
          {%- endif %}
        {%- if cookiecutter.db_info.name == "mysql" %}
        options: --health-cmd="mysqladmin ping -u root" --health-interval=15s --health-timeout=5s --health-retries=5
        {%- endif %}
        {%- if cookiecutter.db_info.name == "postgresql" %}
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5
        {%- endif %}
        ports:
          - {{ cookiecutter.db_info.port }}
    {%- endif %}
    {%- endif %}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run pytest check
        run: poetry run pytest -vv --cov="{{cookiecutter.project_name}}" .
        {%- if cookiecutter.db_info.name != "none" %}
        {%- if cookiecutter.db_info.name != "sqlite" %}
        env:
          {{ cookiecutter.project_name | upper }}_DB_HOST: localhost
          {{ cookiecutter.project_name | upper }}_DB_PORT: {{'${{'}}job.services.{{cookiecutter.project_name}}-db.ports['{{cookiecutter.db_info.port}}']{{'}}'}}
        {%- endif %}
        {%- endif %}
