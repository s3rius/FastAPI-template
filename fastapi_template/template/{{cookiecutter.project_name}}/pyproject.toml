[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "0.1.0"
description = "{{cookiecutter.project_description}}"
authors = [

]
maintainers = [

]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.75.0"
uvicorn = { version = "^0.17.0", extras = ["standard"] }
pydantic = {version = "^1.9.0", extras = ["dotenv"]}
yarl = "^1.7.2"
ujson = "^5.1.0"
{%- if cookiecutter.orm == "piccolo" %}
{%- if cookiecutter.db_info.name == "postgresql" %}
piccolo = {version = "^0.74.0", extras = ["postgres"]}
{%- elif cookiecutter.db_info.name == "sqlite" %}
piccolo = {version = "^0.74.0", extras = ["sqlite"]}
{%- endif %}
{%- endif %}
{%- if cookiecutter.orm == "sqlalchemy" %}
SQLAlchemy = {version = "^1.4", extras = ["mypy", "asyncio"]}
{%- if cookiecutter.enable_migrations == "True" %}
alembic = "^1.7.7"
{%- endif %}
{%- if cookiecutter.db_info.name == "postgresql" %}
asyncpg = {version = "^0.25.0", extras = ["sa"]}
{%- elif cookiecutter.db_info.name == "sqlite" %}
aiosqlite = "^0.17.0"
{%- elif cookiecutter.db_info.name == "mysql" %}
aiomysql = "^0.0.22"
mysqlclient = "^2.1.0"
{%- endif %}
{%- endif %}
{%- if cookiecutter.orm == "tortoise" %}
tortoise-orm = "^0.19.0"
{%- if cookiecutter.enable_migrations == "True" %}
aerich = "^0.6.2"
{%- endif %}
{%- if cookiecutter.db_info.name == "postgresql" %}
asyncpg = "^0.25.0"
{%- elif cookiecutter.db_info.name == "sqlite" %}
aiosqlite = "^0.17.0"
{%- elif cookiecutter.db_info.name == "mysql" %}
aiomysql = "^0.0.21"
mysqlclient = "^2.0.3"
cryptography = "^36.0.2"
{%- endif %}
{%- endif %}
{%- if cookiecutter.orm == "ormar" %}
ormar = "^0.11.0"
{%- if cookiecutter.enable_migrations == "True" %}
alembic = "^1.7.7"
{%- endif %}
{%- if cookiecutter.db_info.name == "postgresql" %}
asyncpg = "^0.25.0"
psycopg2-binary = "^2.9.3"
{%- elif cookiecutter.db_info.name == "sqlite" %}
aiosqlite = "^0.17.0"
{%- elif cookiecutter.db_info.name == "mysql" %}
aiomysql = "^0.0.22"
mysqlclient = "^2.1.0"
{%- endif %}
{%- endif %}
{%- if cookiecutter.enable_redis == "True" %}
redis = {version = "^4.3.3", extras = ["hiredis"]}
{%- endif %}
{%- if cookiecutter.self_hosted_swagger == 'True' %}
aiofiles = "^0.8.0"
{%- endif %}
{%- if cookiecutter.orm == "psycopg" %}
psycopg = { version = "^3.0.11", extras = ["binary", "pool"] }
{%- endif %}
httptools = "^0.3.0"
{%- if cookiecutter.api_type == "graphql" %}
strawberry-graphql = { version = "^0.114.2", extras = ["fastapi"] }
{%- endif %}
{%- if cookiecutter.enable_rmq == "True" %}
aio-pika = "^8.0.3"
{%- endif %}
{%- if cookiecutter.prometheus_enabled == "True" %}
prometheus-client = "^0.14.1"
prometheus-fastapi-instrumentator = "5.8.1"
{%- endif %}
{%- if cookiecutter.sentry_enabled == "True" %}
sentry-sdk = "^1.5.12"
{%- endif %}
{%- if cookiecutter.otlp_enabled == "True" %}
protobuf = "~3.20.0"
opentelemetry-api = {version = "^1.12.0rc1", allow-prereleases = true}
opentelemetry-sdk = {version = "^1.12.0rc1", allow-prereleases = true}
opentelemetry-exporter-otlp = {version = "^1.12.0rc1", allow-prereleases = true}
opentelemetry-instrumentation = "^0.31b0"
opentelemetry-instrumentation-logging = "^0.31b0"
opentelemetry-instrumentation-fastapi = "^0.31b0"
{%- if cookiecutter.enable_redis == "True" %}
opentelemetry-instrumentation-redis = "^0.31b0"
{%- endif %}
{%- if cookiecutter.db_info.name == "postgresql" and cookiecutter.orm in ["ormar", "tortoise"] %}
opentelemetry-instrumentation-asyncpg = "^0.31b0"
{%- endif %}
{%- if cookiecutter.orm == "sqlalchemy" %}
opentelemetry-instrumentation-sqlalchemy = "^0.31b0"
{%- endif %}
{%- endif %}

[tool.poetry.dev-dependencies]
pytest = "^7.0"
flake8 = "^4.0.1"
mypy = "^0.910"
isort = "^5.10.1"
yesqa = "^1.3.0"
pre-commit = "^2.19.0"
wemake-python-styleguide = "^0.16.1"
black = "^22.3.0"
autoflake = "^1.4"
{%- if cookiecutter.orm == "sqlalchemy" %}
SQLAlchemy = {version = "^1.4", extras = ["mypy"]}
{%- endif %}
pytest-cov = "^3.0.0"
anyio = "^3.6.1"
pytest-env = "^0.6.2"
{%- if cookiecutter.enable_redis == "True" %}
fakeredis = "^1.8.1"
{%- endif %}
{%- if cookiecutter.orm == "tortoise" %}
asynctest = "^0.13.0"
nest-asyncio = "^1.5.5"
{%- endif %}
httpx = "^0.22.0"
{%- if cookiecutter.enable_redis == "True" %}
types-redis = "^4.2.6"
{%- endif %}


[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["{{cookiecutter.project_name}}",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
{%- if cookiecutter.orm == "sqlalchemy" %}
plugins = ["sqlalchemy.ext.mypy.plugin"]
{%- endif %}

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
{%- if cookiecutter.db_info.name != "none" %}
env = [
    {%- if cookiecutter.db_info.name == "sqlite" %}
    "{{cookiecutter.project_name | upper}}_DB_FILE=test_db.sqlite3",
    {%- else %}
    "{{cookiecutter.project_name | upper}}_DB_BASE={{cookiecutter.project_name}}_test",
    {%- endif %}
    {%- if cookiecutter.orm == "piccolo" %}
    "PICCOLO_CONF={{cookiecutter.project_name}}.piccolo_conf",
    {%- endif %}
    {%- if cookiecutter.sentry_enabled == "True" %}
    "{{cookiecutter.project_name | upper}}_SENTRY_DSN=",
    {%- endif %}
]
{%- endif %}

{%- if cookiecutter.orm == "tortoise" %}
{%- if cookiecutter.enable_migrations == "True" %}
[tool.aerich]
tortoise_orm = "{{cookiecutter.project_name}}.db.config.TORTOISE_CONFIG"
location = "./{{cookiecutter.project_name}}/db/migrations"
src_folder = "./{{cookiecutter.project_name}}"
{%- endif %}
{%- endif %}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
